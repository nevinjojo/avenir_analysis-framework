#!/usr/bin/perl -w
#####################################################################
# Framework to run SQL Queries on Avenir Databases
#
# This program is wrote to run SQL queries using a Perl Framework
# to do data analysis
# tab==4 spaces
#
# Author: Nevin Jojo
######################################################################

use strict;
use warnings;

use 5.010;
use Getopt::Long qw(GetOptions);
use File::Find;

use Avenir::Common::OBJ::DB;
use Avenir::Common::Syslog qw(:all);

use File::Basename;
use lib dirname (__FILE__) . "/modules";
use fileReader;

######################################################################
# Processes
######################################################################

##
# returns an array of sql file(s) that will be executed
##
sub find_files
{
    my @dirs = shift();
    my @files;

    find({ wanted => sub { push @files, $File::Find::name } , no_chdir => 1 }, @dirs);
    return @files;
}


##
# read SQL files
##
#sub read_sql
#{
#    my $db = $_[0];
#    my $dbh = $db->dbh;

#    my @sql_files = @{$_[1]};
    
#    foreach my $file (@sql_files)
#    {
        #sanity check the sql file format
#        if (index($file, ".sql") == -1) {
#            next;
#        }

        # execute sql file
#        &execute_sql($dbh, $file);

        # report the results / data from the reported handler object
#        &report_results($sth, $file);
#    }
#}


##
# execute sql queries
##
#sub execute_sql
#{
#    my $dbh = $_[0];
#    my $file = $_[1];
#    say $file;
#    my $content;

    #Open each file and store the content
#    open(SQL, '<', $file) or open(SQL, "<scripts/$file") or warn("Can't open $file");
#        local $/;
#        $content = <SQL>;
#    close(SQL);
        
    # prepare the sql statement and store it in the statement handler object
#    my $sth;
    
#    eval {
#        $sth = $dbh->prepare($content) or warn("Can't prepare the sql statement");
#    } or do {
#        my $error = $@;
#    };
       
    # execute the statement handler object
#    eval {
#        $sth->execute() or warn("Can't execute sql statements");
#    } or do {
#        my $error = $@;
#    };
#}


##
# report results from SQL query
##
sub report_results
{
    my $sth = shift;
    my $filename = $ARGV[1];

    if (not defined $filename) {
        warn "Report file not specified; Saving results in 'reports/report.txt'.\n";
        $filename = "report.txt";
    }

    open(my $fh, ">reports/$filename") or die("Could not open file '/reports/$filename'!");
    binmode($fh, ":utf8");

    while(my @ref = $sth->fetchrow_array())
    {
        print $fh join(',',@ref),"\n";
    }
    close($fh);
}

######################################################################
# Main
######################################################################

# open DB
my $db = Avenir::Common::OBJ::DB->new();


# declaring src and dest files (or path) based on argv commands
my $src = 'scripts/';
my $dest = 'reports/';


# checks if the flags values
GetOptions(
    'src|s=s' => \$src,
    'dest|d=s' => \$dest,
) or die "Usage: --src /PATH/TO/FILE\nUsage: --dest /PATH/TO/FILE\n";


# array of sql file(s)
my @files = find_files($src);

# process - Read SQL Queries from .sql file
read_sql($db, \@files);

# close DB

$db->disconnect;

